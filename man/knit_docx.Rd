% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knit.R
\name{knit_docx}
\alias{knit_docx}
\alias{knit_docx_prompt}
\title{Knit to a docx file, with package-specific config.}
\usage{
knit_docx(
  input,
  use_output_dir = TRUE,
  output_dir = "delivery",
  use_shiny_prompt = FALSE,
  use_datestamp = TRUE,
  datestamp = lubridate::today(),
  use_docx_template = TRUE,
  docx_template_file = docx_template(),
  ...
)

knit_docx_prompt(...)
}
\arguments{
\item{input}{Input file}

\item{use_output_dir}{Logical. Should a separate delivery dir be used for output?}

\item{output_dir}{Output directory (default: delivery)}

\item{use_shiny_prompt}{Use Shiny to ask for report parameters defined in YAML header}

\item{use_datestamp}{Add a date stamp to the filename (before the docx).}

\item{datestamp}{A date stamp to add (_YYYYMMDD)}

\item{use_docx_template}{Use the [\code{\link[=docx_template]{docx_template()}}] function that specifies a docx template for knitting.}

\item{docx_template_file}{The filename to use as a docx template}

\item{...}{Any other parameters}
}
\value{
Nothing, knits and processes file (see [\code{\link[knitr:knit]{knitr::knit()}}] for details).
}
\description{
The \code{U54Reports} package has customizations to the knit command,
embedded within this function.
}
\details{
This code was taken from
https://bookdown.org/yihui/rmarkdown-cookbook/custom-knit.html as a way
to change the output file associated with markdown from within R Studio.

To use these customizations, include the following in the YAML header of
the markdown file:

\if{html}{\out{<div class="sourceCode">}}\preformatted{knit: U54Reports::knit_docx
}\if{html}{\out{</div>}}

The knit_docx function is generic in that the defaults to the function operate as
a normal knit would (with the exception of the alternate directory). Note that the
YAML header cannot include a function with parameters as a call, only the reference
to the function.

There are specific functions that handle various combinations of parameters. See, for
instance, [\code{\link[=knitr_docx_with_timestamp]{knitr_docx_with_timestamp()}}].

The specific customizations of knitr include:
\itemize{
\item Output directory is set to \code{here::here(delivery)} with \code{delivery} being the default
name (can be overridden with the \code{delivery} parameter).
\item Can ask for parameters to the markdown document via shiny rather than setting them manually.
\item Can include \verb{_datestamp} on the output filename when knitting.
}
}
\section{Functions}{
\itemize{
\item \code{knit_docx_prompt}: Knit using the Shiny interface for parameters
}}

